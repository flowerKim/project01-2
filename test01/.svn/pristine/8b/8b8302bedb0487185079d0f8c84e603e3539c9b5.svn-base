define([
          'jquery',
          'qrcode',
          'validate',
          'app/common'
       ], function($, qrcode){
	
	return {
		memberInfo: function() {
			$.getJSON(contextRoot + '/bitin/auth/loginInfo.do', function(result) {
				var data = result.data;
				if (result.state == 'yes') {
					console.log(data.no + " + " + data.name);
					$('#myid').val(data.no);
					$('#myname').val(data.name);
					$('#myemail').val(data.email);
					$('#mytel').val(data.tel);
					$('#mNo').val(data.no);
					
//					$('#loginBtn').css('display', 'none');
//					$('#userInfo').css('display', '');
				} else {
					$('#myid').val('아무개');
					$('#myname').val('아무개');
//					$('#loginBtn').css('display', '');
//					$('#userInfo').css('display', 'none');
				}
			});
		},
		infoValidate: function(){
			$('#edit-myinformation').validate({
				rules: {
					mno: { required: true },
					name: { required: true },
					password: { required: true, minlength: 6 },
					repassword: { required: true, minlength: 6, equalTo: '#mypass' },
					email: { required: true, email: true },
					tel: { required: true }
				}, 
				messages: {
					mno: { required: "필수 입력 항목입니다." },
					name: { required: "필수 입력 항목입니다." },
					password: { required: "필수 입력 항목입니다.", minlength: "6글자 이상이어야 합니다." },
					repassword: { 
						required: "필수 입력 항목입니다.", 
						minlength: "6글자 이상이어야 합니다.",
						equalTo: "비밀번호가 일치하지 않습니다." 
					},
					email: { required: "필수 입력 항목입니다.", email: "이메일 규칙에 맞춰 주세요."},
					tel: { required: "필수 입력 항목입니다." }
				}
			});
		},
		qrEncode: function(){
			$('#qr-encode').qrcode({
				render: 'image',
				size: 150,
				radius: 0.5,
				text: "http://edit.com"
			});
			console.log("정상 작동")
		}
	}
});

/* qr코드 옵션 
 
 {
    // render method: 'canvas', 'image' or 'div'
    render: 'canvas',

    // version range somewhere in 1 .. 40
    minVersion: 1,
    maxVersion: 40,

    // error correction level: 'L', 'M', 'Q' or 'H'
    ecLevel: 'L',

    // offset in pixel if drawn onto existing canvas
    left: 0,
    top: 0,

    // size in pixel
    size: 200,

    // code color or image element
    fill: '#000',

    // background color or image element, null for transparent background
    background: null,

    // content
    text: 'no text',

    // corner radius relative to module width: 0.0 .. 0.5
    radius: 0,

    // quiet zone in modules
    quiet: 0,

    // modes
    // 0: normal
    // 1: label strip
    // 2: label box
    // 3: image strip
    // 4: image box
    mode: 0,

    mSize: 0.1,
    mPosX: 0.5,
    mPosY: 0.5,

    label: 'no label',
    fontname: 'sans',
    fontcolor: '#000',

    image: null
}
 
 */











